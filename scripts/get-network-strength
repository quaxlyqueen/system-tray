#!/bin/zsh

# This script is used to identify the strength of a network signal given the Rx and Tx values in MB/s

# The script takes 2 arguments, the Rx and Tx values in MB/s
# The script then calculates the strength of the network signal based on the following criteria:
#
# If the Rx is over 80 MB/s and the Tx is over 60 MB/s, the network is considered "Excellent"
# If the Rx is over 50 MB/s and the Tx is over 30 MB/s, the network is considered "Good"
# If the Rx is over 30 MB/s and the Tx is over 10 MB/s, the network is considered "Fair"
# If the Rx is over 10 MB/s and the Tx is over 5 MB/s, the network is considered "Poor"

# The script then prints the strength of the network signal to the console

# If the user does not provide 2 arguments, the script will print an error message to the console
if [ $# -ne 2 ]; then
    echo "Error: Please provide 2 arguments"
    echo "Usage: ./network_strength.sh <Rx> <Tx>"
    exit 1
fi

# The script stores the Rx and Tx values in variables
Rx=$1
Tx=$2

# The script then checks the strength of the network signal based on the criteria
# If the Rx is over 80 MB/s and the Tx is over 60 MB/s, the network is considered "Excellent"
if [ $Rx -gt 80 ] && [ $Tx -gt 60 ]; then
    echo "󰤨  "

# If the Rx is over 50 MB/s and the Tx is over 30 MB/s, the network is considered "Good"
elif [ $Rx -gt 50 ] && [ $Tx -gt 30 ]; then
    echo "󰤥  "

# If the Rx is over 30 MB/s and the Tx is over 10 MB/s, the network is considered "Fair"
elif [ $Rx -gt 30 ] && [ $Tx -gt 10 ]; then
    echo "󰤢  "

# If the Rx is over 10 MB/s and the Tx is over 5 MB/s, the network is considered "Poor"
elif [ $Rx -gt 10 ] && [ $Tx -gt 5 ]; then
    echo "󰤟  "

# If the Rx and Tx values do not meet any of the criteria, the network is considered "Unusable"
else
    echo "󰤯  "
fi
